pipeline {
    agent any
    environment {
        dockerImageName = "shehan97105/chatapiservice"
        dockerImage = null
    }
    stages{
        stage('Create Config Map') {
            steps {
                sh 'kubectl create configmap init-sql-configmap --from-file=init.sql'
            }
        }
        stage('Deploy to Dev Enviornment') {
                steps {
                    script {
                         kubernetesDeploy(configs: 'chatservice.yml', kubeconfigId:'kubernetesconfigpwd')
                         kubernetesDeploy(configs: 'chat.yml', kubeconfigId:'kubernetesconfigpwd')
                        }
                    }
                }
        stage('Deploy to Test Enviornment') {
                steps {
                    script {
                         kubernetesDeploy(configs: 'chatservice.yml', kubeconfigId:'kubernetesconfigpwd')
                         kubernetesDeploy(configs: 'chattest.yml', kubeconfigId:'kubernetesconfigpwd')
                        }
                }
        }
        stage('Deploy to Prod Enviornment') {
                steps {
                    script {
                         kubernetesDeploy(configs: 'chatservice.yml', kubeconfigId:'kubernetesconfigpwd')
                         kubernetesDeploy(configs: 'chatprod.yml', kubeconfigId:'kubernetesconfigpwd')
                        }
                    }
        }
    }
}
