pipeline {
    agent any
    environment {
        dockerImageName = "${params.DOCKER_IMAGE_NAME}"
        kubeconfigId = "${params.KUBECONFIG_ID}"

        gkeClusterName = "openai-api-services"
        gkeZone = "us-central1"
        gkeCredentialsId = "my-gke-credentials"
    }
    stages{
        stage('Deploy to Dev Environment') {
                steps {
                    container('google-cloud-sdk') {
                      sh 'gcloud auth activate-service-account --key-file=openai-gke-service.json'
                      sh 'gcloud container clusters get-credentials openai-api-services --zone us-central1 --project apiservices-384019'
                      sh 'kubectl apply -f chat.yml'
                    }
                }
         }
        stage('Deploy to Test Environment') {
                steps {
                    container('google-cloud-sdk') {
                      sh 'gcloud auth activate-service-account --key-file=openai-gke-service.json'
                      sh 'gcloud container clusters get-credentials openai-api-services --zone us-central1 --project apiservices-384019'
                      sh 'kubectl apply -f chattest.yml'
                    }
                }
        }
        stage('Deploy to Prod Environment') {
                steps {
                    container('google-cloud-sdk') {
                      sh 'gcloud auth activate-service-account --key-file=openai-gke-service.json'
                      sh 'gcloud container clusters get-credentials openai-api-services --zone us-central1 --project apiservices-384019'
                      sh 'kubectl apply -f chatprod.yml'
                    }
        }
    }
}
