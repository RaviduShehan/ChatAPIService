    def readManifestFile(file) {
        return readFile(file).trim()
 }
pipeline {
    agent any
    environment {
        dockerImageName = "${params.DOCKER_IMAGE_NAME}"
        kubeconfigId = "${params.KUBECONFIG_ID}"

        gkeClusterName = "openai-api-cluster"
        gkeZone = "us-central1-c"
        gkeCredentialsId = "apiservicesauth"
        NAMESPACE_ID="dev"
        DEPLOYMENT_ID="chatapidev"
    }
    stages{
         stage('Get docker Image'){
           steps {
                script {
                    echo "Docker image name: ${dockerImageName}"
                    echo "Namespce: ${NAMESPACE_ID}"
                    echo "DEPLOYMENT_ID: ${DEPLOYMENT_ID}"
                }
            }

        }
        stage('Replace values in manifest file') {
            steps {
                script {
                            def manifest = readManifestFile('chat.yml')
                            manifest = manifest.replaceAll('DEPLOYMENT_NAME', "${DEPLOYMENT_ID}")
                            manifest = manifest.replaceAll('NAMESPACE', "${NAMESPACE_ID}")
                            writeFile file: 'chat.yml', text: manifest
                        }
                    }
                }

        stage('Deploy to ${NAMESPACE_ID} Environment') {
                steps {

                    step([
                        $class: 'KubernetesEngineBuilder',
                        projectId: 'apiservices-384122',
                        credentialsId: gkeCredentialsId,
                        clusterName: gkeClusterName,
                        location: gkeZone,
                        manifestPattern: 'chat.yml'])

                   }
        }

    }
}


