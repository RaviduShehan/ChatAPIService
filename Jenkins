def readManifestFile(file) {
    return readFile(file).trim()
}

pipeline {
    agent any
    environment {
        DOCKERIMAGE = "${params.DOCKER_IMAGE_NAME}"
        kubeconfigId = "${params.KUBECONFIG_ID}"

        gkeClusterName = "openai-api-cluster"
        gkeZone = "us-central1-c"
        gkeCredentialsId = "apiservicesauth"
        DEPLOYMENT_ID="chatapi"
    }
    stages{
        stage('Get docker Image'){
            steps {
                script {
                    echo "Docker image name: ${DOCKERIMAGE}"
                    echo "DEPLOYMENT_ID: ${DEPLOYMENT_ID}"
                }
            }
        }
        stage('Deploy to Dev Environment') {
            steps {
                echo "Deploy to Dev Env"
                 script {
                    def manifest = readManifestFile('chat.yml')
                    manifest = manifest.replaceAll('DEPLOYMENT_NAME', "${DEPLOYMENT_ID}")
                    manifest = manifest.replaceAll('NAMESPACE', "dev")
                    manifest = manifest.replaceAll('dockerImageName',"${DOCKERIMAGE}")
                    writeFile file: 'chat.yml', text: manifest
                }
                step([
                    $class: 'KubernetesEngineBuilder',
                    projectId: 'apiservices-384122',
                    credentialsId: gkeCredentialsId,
                    clusterName: gkeClusterName,
                    location: gkeZone,
                    manifestPattern: 'chat.yml'
                ])
            }
        }
        post {
                always {
                    input "Do you want to deploy to test environment?", ok: 'Proceed', submitter: 'user'
                }
            }
        }
        stage('Deploy to Test Environment') {
            when {
                expression { currentBuild.result == 'SUCCESS' }
            }
            steps {
                echo "Deploy to Test Env"
                script {
                    def manifest = readManifestFile('chat.yml')
                    manifest = manifest.replaceAll('DEPLOYMENT_NAME', "${DEPLOYMENT_ID}")
                    manifest = manifest.replaceAll('NAMESPACE', "test")
                    manifest = manifest.replaceAll('dockerImageName',"${DOCKERIMAGE}")
                    writeFile file: 'chat.yml', text: manifest
                }
                step([
                    $class: 'KubernetesEngineBuilder',
                    projectId: 'apiservices-384122',
                    credentialsId: gkeCredentialsId,
                    clusterName: gkeClusterName,
                    location: gkeZone,
                    manifestPattern: 'chat.yml'
                ])
            }
        }
        stage('Manual Approval for Deploy to Prod Environment') {
            when {
                branch 'main'
            }
            steps {
                script {
                    // Prompt the user to manually approve the deployment to the test environment
                    input message: 'Deploy to Prod Environment?', ok: 'Deploy'
                }
            }
        }
        post {
                always {
                    input "Do you want to deploy to prod environment?", ok: 'Proceed', submitter: 'user'
                }
            }
        }
        stage('Deploy to Prod Environment') {
            when {
                expression { currentBuild.result == 'SUCCESS' }
            }

            steps {
                echo "Deploy to Prod Env"
                script {
                    def manifest = readManifestFile('chat.yml')
                    manifest = manifest.replaceAll('DEPLOYMENT_NAME', "${DEPLOYMENT_ID}")
                    manifest = manifest.replaceAll('NAMESPACE', "test")
                    manifest = manifest.replaceAll('dockerImageName',"${DOCKERIMAGE}")
                    writeFile file: 'chat.yml', text: manifest
                }
                step([
                    $class: 'KubernetesEngineBuilder',
                    projectId: 'apiservices-384122',
                    credentialsId: gkeCredentialsId,
                    clusterName: gkeClusterName,
                    location: gkeZone,
                    manifestPattern: 'chat.yml'
                ])
            }
        }
    }
}
